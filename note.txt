http://youxiputao.com/articles/11839
http://blog.csdn.net/liangjinglong/article/details/78056157
<quad name=Influence_03 size=40 width=1/>[asd]高菊进攻<quad name=Influence_03 size=40 width=1/>[222]窦姜胜利

http://192.168.0.5/GF_Game_Assembly
token=25fac5f6f4342b4d4f28861a7a7890fd88ea3575
imei=862155038625900

参数
\\192.168.0.6\常用共享资源\技术支持中心\SDK支持部\手游\渠道SDK\1参数

预发布
BBWYLKECSFMDXEZGIMQBGPZXKO36QTOG5
电信221.224.134.178 bojoy-quality  联通58.240.197.142 bojoy-zj


IntelliJ IDEA 常用快捷键
Ctrl+N 查找类 // 查找lua文件下面一条查找文件的命令更加实用
Ctrl+Shift+N 查找文件
CTRL+SHIFT+ALT+N 查找类中的方法或变量
CIRL+B / F4 找变量的来源
CTRL+G 定位行 / 跳转行
Ctrl+Alt+L 格式化代码
Ctrl+X 删除行
Ctrl+D 复制行
Ctrl+R 替换文本
Ctrl+F 查找文本
CIRL+U 大小写切换
CTRL+Z 倒退
Ctrl+P 方法参数提示
CTRL+SHIFT+Z 向前
CTRL+ALT+F12 资源管理器打开文件夹
ALT+F1 查找文件所在目录位置
Ctrl＋F12，可以显示当前文件的结构


https://blog.uwa4d.com/archives/usparkle_luajit.html
http://blog.csdn.net/column/details/14927.html
http://gad.qq.com/article/detail/7191191
http://developer.download.nvidia.com/CgTutorial/cg_tutorial_appendix_e.html
http://docs.nvidia.com/tegra-graphics-debugger/2.0/index.html#developertools/mobile/tegra_graphics_debugger/tgd_setup_nonrooted.htm%3FTocPath%3DTegra%2520Graphics%2520Debugger%7C_____4

GOIS账号
用户名 wangjian
密码 wangjian0620
http://gois.9917.com/

http://192.168.0.99/project-task-30.html

#http(s)://$domain$/version/$appCode$/client/$operator$/1/clientConf.json?v=$curtime$
#http(s)://$domain$/version/$appCode$/client/$operator$/1/server_list.json?v=$curtime$
#http(s)://$domain$/rest/$appCode$/$operator$/login.do
#LoginUrl=ClientConf.domain_proxy/rest
裸包包名 com.GF.unity3dmcncn.hwyad
好玩友渠道包包名 com.GF.unity3dmcncn.hwyad.hwy
adb forward tcp:54999 localabstract:Unity-com.GF.unity3dmcncn.hwyad

\\192.168.0.6\项目资源共享\研发部\SLG\版本库\01 每日客户端自动打包
https://msdn.microsoft.com/zh-cn/library/az24scfc.aspx
https://blog.uwa4d.com/archives/TechSharing_59.html
SpriteToParticles

https://github.com/lukego/blog/labels/luajit
https://pwparchive.wordpress.com/2012/10/16/peeking-inside-luajit/
https://www.freelists.org/post/luajit/how-to-read-the-source-codes-of-luajit,2
https://www.lua.org/manual/5.3/manual.html#6.4.1
http://lua-users.org/wiki/PatternsTutorial

http://avnpc.com/pages/photoshop-layer-blending-algorithm
http://www.cnblogs.com/zwywilliam/p/5999980.html

c:\protobuf-2.4.1\src\protoc.exe --lua_out=./ --plugin=protoc-gen-lua="D:\works\unity\slua\protoc-gen-lua\plugin\protoc-gen-lua.bat" xxxx.proto


http://blog.sina.com.cn/s/blog_4a657c5a0102vvyl.html

http://www.dushu369.com/qtyd/HTML/83427.html

https://bitbucket.org/ddreaper/unity-ui-extensions/downloads
https://forum.unity3d.com/threads/sprite-icons-with-text-e-g-emoticons.265927/

https://zh.wikipedia.org/wiki/Adreno
https://github.com/msgpack/msgpack/blob/master/spec.md#float-format-family

http://blog.csdn.net/candycat1992/article/details/39994049
http://192.168.0.99/project-task-30.html

https://blogs.unity3d.com/cn/2016/11/01/adam-demo-executable-and-assets-released/
https://blogs.unity3d.com/cn/2017/01/04/adam-vfx-in-the-real-time-short-film/

https://blogs.unity3d.com/cn/2015/02/18/working-with-physically-based-shading-a-practical-approach/
http://outerra.blogspot.jp/2009/08/logarithmic-z-buffer.html

http://192.168.0.7:4040/rest/Unity3dM_cn_cn/pc/login.do?pPort=123131&pModel=pc|pcwin32&pChannel=pc&pExt=&pWord=123&pDevice=&pOPR=pc&pSID=34800000&pMac=40-8D-5C-52-EA-AC&pVer=1.0.0
http://palacecard.doc.bojoy.net/?id=95

http://blog.csdn.net/ccanan/article/category/628147

https://github.com/pangweiwei/slua/wiki/%E4%B8%AD%E6%96%87%E5%B8%AE%E5%8A%A9
https://github.com/miloyip/game-programmer

http://catlikecoding.com/unity/tutorials/rendering/part-3/
http://catlikecoding.com/unity/tutorials/rendering/part-1/
https://docs.unity3d.com/Manual/SL-VertexFragmentShaderExamples.html
https://docs.unity3d.com/Manual/SL-SurfaceShaderLightingExamples.html

https://blogs.unity3d.com/cn/2015/02/18/working-with-physically-based-shading-a-practical-approach/
http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/
http://gcld.1188.com/game/play/?gid=51&sid=10885

http://gad.qq.com/article/detail/7166492
http://gad.qq.com/article/detail/7687
https://unity3d.com/cn/learn/tutorials/topics/graphics/gentle-introduction-shaders?playlist=17102
https://unity3d.com/cn/learn/tutorials/topics/best-practices
https://docs.unity3d.com/Manual/LinearLighting.html
http://www.gamasutra.com/blogs/KevinRyan/20150331/239636/The_Butterfly_Effect.php
http://www.bepu-games.com/forum/viewtopic.php?f=4&t=2302
http://rawkes.com/articles/creating-a-real-time-multiplayer-game-with-websockets-and-node.html
http://stackoverflow.com/questions/605124/fixed-point-math-in-c
http://ddeville.me/2014/04/dynamic-linking

**
msbuild.exe mono.sln /p:Configuration=Release_eglib
http://richg42.blogspot.com/2015/05/industrial-strength-mono-memory.html
http://www.gamasutra.com/blogs/RichGeldreich/20150731/250071/Lessons_Learned_While_Fixing_Memory_Leaks_in_our_First_Unity_Title.php
http://www.gamasutra.com/blogs/WendelinReich/20131127/203843/C_Memory_Management_for_Unity_Developers_part_3_of_3.php

http://www.51nb.com/xinwen/benzhanshiye/2016-06-21/76965_3.html
http://costfine.blog.163.com/blog/static/213660015201211743645748/

**
http://doc.ulua.org/article/ulua/uluadaimazhongruhenewyigecduixiang20151109185630.html

**
http://www.webtag123.com/android/41331.html
http://drops.wooyun.org/tips/6840
http://www.alanzucconi.com/2016/01/27/arrays-shaders-heatmaps-in-unity3d/

**
http://www.somasim.com/blog/2015/04/csharp-memory-and-performance-tips-for-unity/
http://www.somasim.com/blog/2015/08/c-performance-tips-for-unity-part-2-structs-and-enums/

**
Recommended reading order:
lmathlib.c, lstrlib.c: get familiar with the external C API. Don't bother with the pattern matcher though. Just the easy functions.
lapi.c: Check how the API is implemented internally. Only skim this to get a feeling for the code. Cross-reference to lua.h and luaconf.h as needed.
lobject.h: tagged values and object representation. skim through this first. you'll want to keep a window with this file open all the time.
lstate.h: state objects. ditto.
lopcodes.h: bytecode instruction format and opcode definitions. easy.
lvm.c: scroll down to luaV_execute, the main interpreter loop. see how all of the instructions are implemented. skip the details for now. reread later.
ldo.c: calls, stacks, exceptions, coroutines. tough read.
lstring.c: string interning. cute, huh?
ltable.c: hash tables and arrays. tricky code.
ltm.c: metamethod handling, reread all of lvm.c now.
You may want to reread lapi.c now.
ldebug.c: surprise waiting for you. abstract interpretation is used to find object names for tracebacks. does bytecode verification, too.
lparser.c, lcode.c: recursive descent parser, targetting a register-based VM. start from chunk() and work your way through. read the expression parser and the code generator parts last.
lgc.c: incremental garbage collector. take your time.
Read all the other files as you see references to them. Don't let your stack get too deep though.
If you're done before X-Mas and understood all of it, you're good. The information density of the code is rather high.

**
http://www.codingart.info/snapshot-detect-Lua-memoryleak.html
http://pan.baidu.com/s/1gd1Wyx9#path=%252Fulua_src
http://www.xuanyusong.com/archives/3571
http://www.znzs.com/topic/Hui-Bao-She-Hui-Shi-Jian-Dao--Android-wearZhu-Liu-Ban-Ben-Hui-Zong#txtContent
http://bbs.pediy.com/showthread.php?t=191649
http://www.52pojie.cn/thread-401702-1-1.html
http://csftech.logdown.com/posts/452269-android-unity-encryption
http://www.xionggf.com/articles/graphic/u3d/an_introduction_to_il2cpp_internals_01.html

**
http://blog.csdn.net/candycat1992/article/details/41605257
http://blog.csdn.net/candycat1992/article/details/47777937
http://www.cnblogs.com/wonderKK/p/4266485.html

**
http://coolshell.cn/articles/11564.html
http://coolshell.cn/articles/11609.html

**
C:\Users\wangjian\AppData\LocalLow\GF\u3dm
C:\Users\wangjian\AppData\Local\Unity\Editor
adb forward tcp:54999 localabstract:Unity-com.GF.dashenwang
adb forward tcp:54999 localabstract:Unity-com.test.grass
adb forward tcp:54999 localabstract:Unity-com.test.skin
adb forward tcp:54999 localabstract:Unity-com.GF.u3dm

** lockstep
http://www.gamasutra.com/view/feature/3094/
http://gafferongames.com/networked-physics/deterministic-lockstep/
http://clintonbrennan.com/2013/12/lockstep-implementation-in-unity3d/
http://clintonbrennan.com/2014/04/lockstep-implementation-in-unity3d-part-2/
http://clintonbrennan.com/2014/01/simple-2d-deterministic-physics-simulation/
https://github.com/ownself/LockStepModule
https://github.com/InkhornGames/lockstep.io
http://stackoverflow.com/questions/605124/fixed-point-math-in-c/616015#616015